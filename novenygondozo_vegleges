import signal
import sys
import time
import spidev
import RPi.GPIO as GPIO
import board
import adafruit_ahtx0
import datetime

#i2c és spi port beállítás
i2c = board.I2C()  
sensor = adafruit_ahtx0.AHTx0(i2c)
spi = spidev.SpiDev(0, 0)
spi.max_speed_hz = 1200000


GPIO.setwarnings(False)
def valmap(value, istart, istop, ostart, ostop):
    value = ostart + (ostop - ostart) * ((value - istart) / (istop - istart))
    if value > ostop:
       value = ostop
    return value

#talajnedvesség jel olvasás
def get_adc(channel):
    if channel != 0:
        channel = 1
    msg = 0b11
    msg = ((msg << 1) + channel) << 5
    msg = [msg, 0b00000000]
    reply = spi.xfer2(msg)
    adc = 0
    for n in reply:
        adc = (adc << 8) + n
    adc = adc >> 1    
    return adc 

#fájl megnyitása append-re
fki=open("adatok.txt","a")
#fájlba adatok kiírása
if __name__ == '__main__':
    try:
        while True:
            now = datetime.datetime.now() #dátum és idő bekérés
            current_time = now.strftime("%D %H:%M:%S") #idő formátum beállítása
            print("\nAktuális idő=",current_time, file=fki) #dátum és idő fájlba írás
            print("Temperature: %0.1f C" % sensor.temperature, file=fki) #hőmérséklet fájlba írás
            print("Humidity: %0.1f %%" % sensor.relative_humidity, file=fki) #páratartalom fájlba írás
            adc_0 = get_adc(1) #talajnedvesség adatbekérés
            print("Soil Moisture Sensor value:", adc_0, file=fki) #dtalajnedvesség fájlba írás
            if adc_0<300: #száraz talaj esetén locsolás elindítása, locsolás hosszát hőmérséklet illetve páratartalom határozza meg
                print("\nLocsolás történt", file=fki)
                if sensor.temperature>25 or sensor.relative_humidity<30:
                    mp=7
                elif sensor.temperature<15 or sensor.relative_humidity>0:
                    mp=3
                else:
                    mp=5
		#vízpumpa bekapcsolása
                GPIO.setup(26, GPIO.OUT) 
                GPIO.output(26, True)
                time.sleep(mp)
                GPIO.output(26, False)
            time.sleep(5)
        
    finally:
        GPIO.cleanup()
